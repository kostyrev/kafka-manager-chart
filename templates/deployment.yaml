apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "kafka-manager.fullname" . }}
  labels:
    app: {{ template "kafka-manager.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "kafka-manager.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: "ZK_HOSTS"
            value: {{ include "kafka-manager.zkHosts" . | quote }}
        {{- if .Values.kafkaManager.basicAuth.enabled }}
          - name: KAFKA_MANAGER_AUTH_ENABLED
            value: "true"
          - name: KAFKA_MANAGER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "kafka-manager.fullname" . }}
                key: basic-authentication-password
        {{- end }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
        {{- if .Values.kafkaManager.basicAuth.enabled }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 5
        {{- else -}}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 5
        {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
